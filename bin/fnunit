#!/usr/bin/env php
<?php

namespace Fnunit\Launcher;

function findFile(array $maybeFiles) {
    return array_reduce($maybeFiles, function($carry, $file) {
        return empty($carry) && file_exists($file) ? realpath($file) : $carry;
    }, false);
}

function loadAutoload($autoloadFile) {
    return $autoloadFile
        ? requireFile($autoloadFile)
        : throwMessage('No Autoload found. Have you done a `$ composer install` lately?');
}

function autoload(array $files) {
    return loadAutoload(findFile($files));
}

function loadComposer($composerFile) {
    return $composerFile
        ? [$composerFile, json_decode(file_get_contents($composerFile), true)]
        : throwMessage('No compose.json found. Do you even have a project?');
}

function composer(array $files) {
    return loadComposer(findFile($files));
}

$autoloads = [__DIR__ . '/../../autoload.php', __DIR__ . '/../vendor/autoload.php', __DIR__ . '/vendor/autoload.php'];
$composers = [__DIR__ . '/../../composer.json', __DIR__ . '/../composer.json', __DIR__ . '/composer.json'];

autoload($autoloads);
list($composerFile, $composerJson) = composer($composers);
chdir(dirname($composerFile));

function requireFile($file) { require $file; };
function includeFile($file) { include $file; };
function throwMessage($message) { throw new \Exception($message); };
function concat(...$arrays) { return array_merge(...$arrays); };

$patterns = $composerJson['extra']['fnunit']['tests'];
$files = $patterns ? concat(...array_map('glob', $patterns)) : glob('./fnunit/*');

array_map('Fnunit\Launcher\includeFile', $files);
